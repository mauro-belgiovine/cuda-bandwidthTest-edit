%!PS-Adobe-2.0
%%Title: htod_output-1380550857-14709.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Mon Sep 30 16:20:57 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (htod_output-1380550857-14709.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Sep 30 16:20:57 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
938 448 M
63 0 V
5989 0 R
-63 0 V
854 448 M
( 2500) Rshow
1.000 UL
LTb
938 1080 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 2600) Rshow
1.000 UL
LTb
938 1712 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 2700) Rshow
1.000 UL
LTb
938 2344 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 2800) Rshow
1.000 UL
LTb
938 2976 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 2900) Rshow
1.000 UL
LTb
938 3608 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 3000) Rshow
1.000 UL
LTb
938 4240 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 3100) Rshow
1.000 UL
LTb
938 4872 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 3200) Rshow
1.000 UL
LTb
938 448 M
0 63 V
0 4361 R
0 -63 V
938 308 M
( 0) Cshow
1.000 UL
LTb
1543 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 20) Cshow
1.000 UL
LTb
2148 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 40) Cshow
1.000 UL
LTb
2754 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 60) Cshow
1.000 UL
LTb
3359 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 80) Cshow
1.000 UL
LTb
3964 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 100) Cshow
1.000 UL
LTb
4569 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 120) Cshow
1.000 UL
LTb
5174 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 140) Cshow
1.000 UL
LTb
5780 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 160) Cshow
1.000 UL
LTb
6385 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 180) Cshow
1.000 UL
LTb
6990 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 200) Cshow
1.000 UL
LTb
1.000 UL
LTb
938 4872 N
938 448 L
6052 0 V
0 4424 V
-6052 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(Bandwidth \(MB/s\)) Cshow
grestore
LTb
LCb setrgbcolor
3964 98 M
(Indice trasferimento \(x10\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 4739 M
(Host -> Device Bandwidth \(MB/s\)) Rshow
LT0
938 919 Pls
968 3169 Pls
999 4507 Pls
1029 4558 Pls
1059 4559 Pls
1089 4480 Pls
1120 4471 Pls
1150 4539 Pls
1180 3972 Pls
1210 4438 Pls
1241 4574 Pls
1271 4437 Pls
1301 4591 Pls
1331 4606 Pls
1362 4484 Pls
1392 4509 Pls
1422 4425 Pls
1452 4515 Pls
1483 4504 Pls
1513 4513 Pls
1543 4083 Pls
1573 4455 Pls
1604 4189 Pls
1634 4466 Pls
1664 4250 Pls
1695 4201 Pls
1725 4136 Pls
1755 4145 Pls
1785 4230 Pls
1816 4271 Pls
1846 4205 Pls
1876 4128 Pls
1906 4177 Pls
1937 4059 Pls
1967 4080 Pls
1997 4109 Pls
2027 4225 Pls
2058 4166 Pls
2088 4309 Pls
2118 4200 Pls
2148 4177 Pls
2179 4174 Pls
2209 4185 Pls
2239 4123 Pls
2269 3786 Pls
2300 4150 Pls
2330 4074 Pls
2360 4181 Pls
2390 4545 Pls
2421 4559 Pls
2451 4593 Pls
2481 4575 Pls
2512 4565 Pls
2542 4517 Pls
2572 4283 Pls
2602 4011 Pls
2633 4210 Pls
2663 4140 Pls
2693 4059 Pls
2723 4126 Pls
2754 4156 Pls
2784 4162 Pls
2814 4072 Pls
2844 4159 Pls
2875 4234 Pls
2905 4489 Pls
2935 4448 Pls
2965 4364 Pls
2996 4305 Pls
3026 4471 Pls
3056 4775 Pls
3086 4702 Pls
3117 4798 Pls
3147 4809 Pls
3177 4741 Pls
3208 4718 Pls
3238 4827 Pls
3268 4697 Pls
3298 4618 Pls
3329 4559 Pls
3359 4575 Pls
3389 4673 Pls
3419 4671 Pls
3450 4643 Pls
3480 4675 Pls
3510 4505 Pls
3540 4693 Pls
3571 4664 Pls
3601 4784 Pls
3631 4591 Pls
3661 4511 Pls
3692 4720 Pls
3722 4669 Pls
3752 4627 Pls
3782 4615 Pls
3813 4610 Pls
3843 4643 Pls
3873 4615 Pls
3903 4559 Pls
3934 4657 Pls
3964 4562 Pls
3994 4592 Pls
4025 4459 Pls
4055 4574 Pls
4085 4763 Pls
4115 4554 Pls
4146 4637 Pls
4176 4613 Pls
4206 4589 Pls
4236 4650 Pls
4267 4632 Pls
4297 4623 Pls
4327 4664 Pls
4357 4694 Pls
4388 4433 Pls
4418 4559 Pls
4448 4648 Pls
4478 4586 Pls
4509 4589 Pls
4539 4548 Pls
4569 4668 Pls
4599 4635 Pls
4630 4672 Pls
4660 4619 Pls
4690 4617 Pls
4721 4576 Pls
4751 4590 Pls
4781 4547 Pls
4811 4594 Pls
4842 4500 Pls
4872 4348 Pls
4902 4490 Pls
4932 4193 Pls
4963 4562 Pls
4993 4597 Pls
5023 4495 Pls
5053 4504 Pls
5084 4379 Pls
5114 4547 Pls
5144 4524 Pls
5174 4452 Pls
5205 4574 Pls
5235 4474 Pls
5265 4522 Pls
5295 4570 Pls
5326 4472 Pls
5356 4574 Pls
5386 4510 Pls
5416 4582 Pls
5447 4278 Pls
5477 4576 Pls
5507 4610 Pls
5538 4575 Pls
5568 4507 Pls
5598 4554 Pls
5628 4358 Pls
5659 4502 Pls
5689 4548 Pls
5719 4512 Pls
5749 4650 Pls
5780 4526 Pls
5810 4657 Pls
5840 4694 Pls
5870 4530 Pls
5901 4583 Pls
5931 4598 Pls
5961 4785 Pls
5991 4718 Pls
6022 4395 Pls
6052 4739 Pls
6082 4395 Pls
6112 4713 Pls
6143 4533 Pls
6173 4387 Pls
6203 4622 Pls
6234 4461 Pls
6264 4660 Pls
6294 4641 Pls
6324 4306 Pls
6355 4640 Pls
6385 4426 Pls
6415 4581 Pls
6445 4695 Pls
6476 4396 Pls
6506 4649 Pls
6536 4415 Pls
6566 4622 Pls
6597 4556 Pls
6627 4435 Pls
6657 4688 Pls
6687 4423 Pls
6718 4508 Pls
6748 4547 Pls
6778 4471 Pls
6808 4529 Pls
6839 4423 Pls
6869 4567 Pls
6899 4526 Pls
6929 4412 Pls
6960 4626 Pls
6622 4739 Pls
1.000 UL
LT1
LTb
6339 4599 M
(cspline) Rshow
LT1
6423 4599 M
399 0 V
938 919 M
61 3593 V
61 47 V
60 -82 V
61 -508 V
61 598 V
61 32 V
61 -116 V
61 -56 V
60 86 V
61 -418 V
61 99 V
61 34 V
61 -98 V
61 111 V
60 -53 V
61 -22 V
61 -83 V
61 136 V
61 88 V
61 -128 V
60 16 V
61 -367 V
61 231 V
61 518 V
61 18 V
60 -33 V
61 -379 V
61 41 V
61 -153 V
61 95 V
61 -80 V
60 230 V
61 100 V
61 -87 V
61 443 V
61 48 V
61 -105 V
60 82 V
61 -204 V
61 22 V
61 34 V
61 -58 V
61 100 V
60 37 V
61 -122 V
61 33 V
61 -30 V
61 32 V
60 -27 V
61 -35 V
61 -101 V
61 179 V
61 -14 V
61 -20 V
60 -1 V
61 94 V
61 -244 V
61 139 V
61 -60 V
61 102 V
60 -12 V
61 -53 V
61 -31 V
61 1 V
61 -80 V
60 -61 V
61 96 V
61 -114 V
61 156 V
61 -5 V
61 -57 V
60 -9 V
61 31 V
61 -193 V
61 302 V
61 -115 V
61 -123 V
60 171 V
61 81 V
61 -16 V
61 -73 V
61 36 V
61 182 V
60 -46 V
61 -48 V
61 -298 V
61 97 V
61 202 V
60 -52 V
61 -68 V
61 -155 V
61 24 V
61 147 V
61 116 V
60 -184 V
61 -31 V
61 -48 V
61 105 V
61 98 V
stroke
LT2
LTb
6339 4459 M
(bezier) Rshow
LT2
6423 4459 M
399 0 V
938 919 M
61 2764 V
61 665 V
60 80 V
61 0 V
61 23 V
61 25 V
61 3 V
61 -23 V
60 -40 V
61 -48 V
61 -49 V
61 -43 V
61 -37 V
61 -28 V
60 -20 V
61 -13 V
61 -7 V
61 -2 V
61 4 V
61 11 V
60 18 V
61 26 V
61 28 V
61 23 V
61 14 V
60 2 V
61 -7 V
61 -9 V
61 -1 V
61 13 V
61 30 V
60 45 V
61 55 V
61 58 V
61 55 V
61 46 V
61 34 V
60 22 V
61 12 V
61 3 V
61 0 V
61 -4 V
61 -4 V
60 -5 V
61 -5 V
61 -5 V
61 -5 V
61 -5 V
60 -4 V
61 -3 V
61 -2 V
61 0 V
61 0 V
61 -1 V
60 0 V
61 -2 V
61 -2 V
61 -4 V
61 -6 V
61 -9 V
60 -11 V
61 -14 V
61 -16 V
61 -15 V
61 -13 V
60 -10 V
61 -5 V
61 -2 V
61 2 V
61 4 V
61 3 V
60 4 V
61 4 V
61 3 V
61 5 V
61 6 V
61 9 V
60 12 V
61 14 V
61 13 V
61 11 V
61 4 V
61 -3 V
60 -8 V
61 -12 V
61 -12 V
61 -10 V
61 -5 V
60 -3 V
61 0 V
61 0 V
61 -2 V
61 -4 V
61 -8 V
60 -11 V
61 -10 V
61 -3 V
61 4 V
61 120 V
stroke
LTb
938 4872 N
938 448 L
6052 0 V
0 4424 V
-6052 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
